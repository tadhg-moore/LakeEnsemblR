[{"path":"https://tadhg-moore.github.io/LakeEnsemblR/articles/LakeEnsemblR_vignette.html","id":"included-models","dir":"Articles","previous_headings":"","what":"Included models","title":"R package LakeEnsemblR: Basic Use and Sample Applications","text":"LakeEnsemblR currently includes following models: GLM (Hipsey et al. (2019)), FLake (Mironov (2008)), GOTM (Umlauf, Bolding, Burchard (2005)), Simstrat (Goudsmit et al. (2002)), MyLake (Saloranta Andersen (2007)).","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/articles/LakeEnsemblR_vignette.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"R package LakeEnsemblR: Basic Use and Sample Applications","text":"LakeEnsemblR R package lets run multiple one-dimensional physical lake models. settings model run controlled one centralised, “master” configuration file YAML format. configuration file, can set specifications model run, including start end time, time steps, links meteorological forcing bathymetry files, etc. package converts settings configuration files required model, export_config function. sets models run settings specified user, models run run_ensemble function. netcdf file created outputs models, package provides functions extract plot data. Part design philosophy LakeEnsemblR input given standardized format. entails standard column names (includes units), comma-separated ASCII files, DateTime format using format YYYY-mm-dd HH:MM:SS, example 2020-04-03 09:00:00. document, explain required files format need . also advise look provided example files, templates provided R package (found package/inst/extdata, extracted function get_template).","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/articles/LakeEnsemblR_vignette.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"R package LakeEnsemblR: Basic Use and Sample Applications","text":"code LakeEnsemblR hosted AEMON-J Github page (https://github.com/aemon-j/LakeEnsemblR), can installed using devtools package package relies multiple packages also need installed. notably, run multiple models, requires packages FLakeR, GLM3r, GOTMr, SimstratR, MyLakeR. packages run individual models, contain ways running models platforms Windows, MacOS, Linux, either executables, model code R.","code":"devtools::install_github(\"aemon-j/LakeEnsemblR)"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/articles/LakeEnsemblR_vignette.html","id":"the-lakeensemblr-configuration-file","dir":"Articles","previous_headings":"","what":"The LakeEnsemblR configuration file","title":"R package LakeEnsemblR: Basic Use and Sample Applications","text":"section, go LakeEnsemblR configuration file. file controls settings models run. written YAML (Yaml Ain’t Markup Language) format, can opened text-editors Notepad Notepad++. Although needed use LakeEnsemblR, can read file R configr package (read.config function). Within LakeEnsemblR, provide get_yaml_multiple input_yaml_multiple functions get input values file type. LakeEnsemblR configuration file provided example dataset package (LakeEnsemblR::get_template(\"LakeEnsemblR_config\")) can download copy GitHub .","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/articles/LakeEnsemblR_vignette.html","id":"location","dir":"Articles","previous_headings":"The LakeEnsemblR configuration file","what":"Location","title":"R package LakeEnsemblR: Basic Use and Sample Applications","text":"first section “Location”. specify name, latitude longitude, elevation, maximum depth, initial depth. also need provide link hypsograph (.e. surface area per depth) file. rest configuration file, links files relative folder argument LakeEnsemblR (now : LER) functions (default R working directory). strongly advise set working directory location LER config file, link files relative directory (explain chapter “Workflow” vignette). example, hypsograph file called hypsograph.csv folder LER config file, corresponding line LER config file look like data needs comma-separated file (.csv) 0m surface depths reported positive, meters. Area needs meters squared. column names must Depth_meter Area_meterSquared Example data:","code":"hypsograph: hypsograph.csv Depth_meter,Area_meterSquared 0,3931000 1,3688025 2,3445050 3,3336093.492 4,3225992.455 5,3133491.11 6,3029720 ..."},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/articles/LakeEnsemblR_vignette.html","id":"time","dir":"Articles","previous_headings":"The LakeEnsemblR configuration file","what":"Time","title":"R package LakeEnsemblR: Basic Use and Sample Applications","text":"“Time” section, fill start end date simulation, model time step. time_step indicates model integration time step, .e. time step model performs calculation. LakeEnsemblR work time zone, provided time columns input files time zone shifts /daylight saving time files. models, GLM requires know time zone. LakeEnsemblR automatically set UTC. However, information used GLM’s albedo_mode 2 3, GLM’s rad_mode set 5 (.e. computing shortwave radiation provided). LakeEnsemblR, default albedo_mode 1, shortwave radiation must provided, providing timezone required. Yet changing albedo_mode 2 3, make sure enter data UTC. GOTM also assumes time UTC, used computing shortwave radiation provided, happen using LakeEnsemblR.","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/articles/LakeEnsemblR_vignette.html","id":"config-files","dir":"Articles","previous_headings":"The LakeEnsemblR configuration file","what":"Config files","title":"R package LakeEnsemblR: Basic Use and Sample Applications","text":"section, link model-specific configuration files. Templates can found package (get_template(\"FLake_config\"), get_template(\"GLM_config\"), etc. available templates can shown using get_template()) can download copy GitHub . setup LakeEnsemblR usually access files, settings regulated LER “main” config file. However, want change specialised settings model, possible.","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/articles/LakeEnsemblR_vignette.html","id":"observations","dir":"Articles","previous_headings":"The LakeEnsemblR configuration file","what":"Observations","title":"R package LakeEnsemblR: Basic Use and Sample Applications","text":"observations water temperature, ice cover water level, can fill . used plotting, case water temperature potentially initialising temperature profile start simulation (see next section). water temperature, data needs comma separated values (.csv) file datetime column format YYYY-mm-dd HH:MM:SS. Depths positive relative water surface. Water temperature degrees Celsius. column names must datetime, Depth_meter Water_Temperature_celsius (templates available). Example data: ice height, data must also comma separated values (.csv) file, datetime column format YYYY-mm-dd HH:MM:SS column name datetime. Ice height must provided meters column must named Ice_Height_meter. Example data: water level, data must also comma seperated values (.csv) file, datetime column format YYYY-mm-dd HH:MM:SS column name datetime. Water level must provided meters ground column must named Water_Level_meter. Example data:","code":"datetime,Depth_meter,Water_Temperature_celsius 2004-01-05 00:00:00,0.9,6.97 2004-01-06 00:00:00,2.5,6.71 2004-01-07 00:00:00,5,6.73 2004-01-08 00:00:00,8,6.76 ... datetime, Ice_Height_meter 2004-01-01 00:00:00,0.3 2004-01-02 00:00:00,0.3 2004-01-03 00:00:00,0.35 ... datetime, Water_Level_meter 2004-01-01 00:00:00,45.4 2004-01-02 00:00:00,45.6 2004-01-03 00:00:00,45.7 ..."},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/articles/LakeEnsemblR_vignette.html","id":"input","dir":"Articles","previous_headings":"The LakeEnsemblR configuration file","what":"Input","title":"R package LakeEnsemblR: Basic Use and Sample Applications","text":"“Input” section, give information initial temperature profile, meteorological forcing, light extinction coefficient, whether ice modules used. Firstly, can give initial temperature profile start simulation (link .csv file headers Depth_meter, Water_Temperature_celsius, template available using get_template(\"Initial temperature profile\")). leave empty, water temperature observations used, provided observation starting time simulation. Secondly, give link file meteorological data. data needs comma separated values (.csv) file datetime column format YYYY-mm-dd HH:MM:SS. See Table 1 list variables, units column names. time_zone setting implemented yet. Table 1. Description meteorological variables used within LakeEnsemblR units required column names.  Next can either give value Kw (light extinction coefficient) 1/m, give link file, can vary Kw time (template available using get_template(\"Light extinction\")). file must comma-separated file (.csv) two columns datetime Extinction_Coefficient_perMeter containing date format (YYYY-mm-dd HH:MM:SS) corresponding Kw value 1/m. Lastly, can specify want use ice modules present models.","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/articles/LakeEnsemblR_vignette.html","id":"inflows","dir":"Articles","previous_headings":"The LakeEnsemblR configuration file","what":"Inflows","title":"R package LakeEnsemblR: Basic Use and Sample Applications","text":"Specify want add inflows simulation. yes, need link file inflow data. data needs comma separated values (.csv) file datetime column format YYYY-mm-dd HH:MM:SS. Flow discharge, water temperature, salinity need specified. column names must datetime, Flow_metersCubedPerSecond, Water_Temperature_celsius, Salinity_practicalSalinityUnits (template available using get_template(\"Inflow\") ). multiple inflows, add suffixes “_1”, “_2”, etc. fix_wlvl argument lets fix water level GOTM model, reproduce behaviour earlier version LakeEnsemblR. Example inflow data:","code":"datetime,Flow_metersCubedPerSecond,Water_Temperature_celsius,Salinity_practicalSalinityUnits 2005-01-01 00:00:00,5.62,6.96,0.00 2005-01-02 00:00:00,2.32,6.00,0.00 2005-01-03 00:00:00,1.77,8.44,0.00 2005-01-04 00:00:00,4.64,7.27,0.00 ..."},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/articles/LakeEnsemblR_vignette.html","id":"outflows","dir":"Articles","previous_headings":"The LakeEnsemblR configuration file","what":"Outflows","title":"R package LakeEnsemblR: Basic Use and Sample Applications","text":"models allow changing water level (moment GLM, GOTM, Simstrat) outflows can set section setting use true. outflow discharge must provided daily resolution .csv file specified file. file must contain date column YYYY-mm-dd HH:MM:SS format called datetime every outflow (specified number_outflows) one column titled Flow_metersCubedPerSecond, one outflow defined outflow columns need numbered like : Flow_metersCubedPerSecond_1, Flow_metersCubedPerSecond_2. outflow depth outflow must specified height meters lake bottom, outflow surface outflow can set “-1”.","code":"outflows:    use: true                                    # use outflows? [true/false]    file: LakeEnsemblR_outflow_standard.csv      # file with outflow data    number_outflows: 2                           # number of outflows in the outflow file    outflow_lvl:                                 # height of the outflow above the ground.       - -1       - 15"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/articles/LakeEnsemblR_vignette.html","id":"output","dir":"Articles","previous_headings":"The LakeEnsemblR configuration file","what":"Output","title":"R package LakeEnsemblR: Basic Use and Sample Applications","text":"“Output” section, specify output look like. can “netcdf” “text”, generate series csv files rLakeAnalyzer format. can specify depth interval output, frequency. Also specify variables output (currently “temp”, “ice_height”, “salt”, “dens”, “w_level”).","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/articles/LakeEnsemblR_vignette.html","id":"scaling-factors","dir":"Articles","previous_headings":"The LakeEnsemblR configuration file","what":"Scaling factors","title":"R package LakeEnsemblR: Basic Use and Sample Applications","text":"“Scaling factors” (scaling_factors) section scaling factors applied meteorological input well inflows outflows, either models model-specific can defined. section specified, scaling applied. Using “” scaling factors applied models can defined, otherwise model specific scaling can supplied using model name. “” model-specific specified certain model, model-specific scaling applied. multiple inflows outflows list scaling parameters must provided (see example).","code":"scaling_factors:    all:       wind_speed: 1.0       swr: 1.0    Simstrat:       wind_speed: 0.95    GLM:      outflow:       - 1.02       - 1.03"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/articles/LakeEnsemblR_vignette.html","id":"model-parameters","dir":"Articles","previous_headings":"The LakeEnsemblR configuration file","what":"Model parameters","title":"R package LakeEnsemblR: Basic Use and Sample Applications","text":"models LakeEnsemblR different parameterisations. section, can set value parameter one model-specific configuration files. can give either name parameter, needed can also provide name section parameter occurs, separated /. example GOTM’s k_min parameter: :","code":"GOTM:     k_min: 3.6E-6 GOTM:     turb_param/k_min: 3.6E-6"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/articles/LakeEnsemblR_vignette.html","id":"calibration","dir":"Articles","previous_headings":"The LakeEnsemblR configuration file","what":"Calibration","title":"R package LakeEnsemblR: Basic Use and Sample Applications","text":"section used calibrating models. package, cali_ensemble function runs calibration. three methods model specific parameters scaling factors input meteorological forcing can calibrated. case parameters calibrated definded master control .yaml file. meteo scalings defined met: section model specific parameters sections corresponding model names e.g. MyLake:. meteo scaling names must short names meteo variables, defined met_var_dic data can inspected using print(met_var_dic). model specific names must parameter name given model specific configuration file (e.g. gotm.yaml) combined lowest section name parameter can found separated slash “/” (e.g. turb_param/k_min). example calibration section look like given : example run calibration see section 5.7 “Model calibration”.","code":"calibration:                                   # Calibration section                                   # Calibration section    met:                                        # Meteo scaling parameter       wind_speed:                              # Wind speed scaling          lower: 0.5                            # lower bound for wind speed scaling                  upper: 2                              # upper bound for wind speed scaling          initial: 1                            # initial value for wind speed scaling          log: false                            # log transform scaling factor       swr:                                     # shortwave radiation scaling          lower: 0.5                            # lower bound for shortwave radiation scaling          upper: 1.5                            # upper bound for shortwave radiation scaling          initial: 1                            # initial value for shortwave radiation scaling          log: false                            # log transform scaling factor    Simstrat:                                # Simstrat specific parameters                                        a_seiche:          lower: 0.0008                         # lower bound for parameter          upper: 0.003                          # upper bound for parameter          initial: 0.001                        # initial value for parameter          log: false                            # log transform scaling factor                              MyLake:                                  # MyLake specific parameters                                          Phys.par/C_shelter:         lower: 0.14                            # lower bound for parameter         upper: 0.16                            # upper bound for parameter         initial: 0.15                          # initial value for parameter         log: false                             # log transform scaling factor       GOTM:                                    # GOTM specific parameters       turb_param/k_min:          lower: 5E-4                           # lower bound for parameter          upper: 5E-6                           # upper bound for parameter          initial: 1E-5                         # initial value for parameter          log: true    GLM:                               # GLM specific parameters       mixing/coef_mix_hyp:          lower: 0.1                       # lower bound for parameter          upper: 2                         # upper bound for parameter          initial: 1                       # initial value for parameter          log: false                       # log transform scaling factor    FLake:                             # FLake specific parameters       c_relax_C:          lower: 0.00003                  # lower bound for parameter          upper: 0.3                      # upper bound for parameter          initial: 0.003                  # initial value for parameter          log: true                       # log transform scaling factor"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/articles/LakeEnsemblR_vignette.html","id":"workflow","dir":"Articles","previous_headings":"","what":"Workflow","title":"R package LakeEnsemblR: Basic Use and Sample Applications","text":"chapter, quickly show workflow LakeEnsemblR look like.","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/articles/LakeEnsemblR_vignette.html","id":"setting-up-a-directory","dir":"Articles","previous_headings":"Workflow","what":"Setting up a directory","title":"R package LakeEnsemblR: Basic Use and Sample Applications","text":"First, make empty directory simulations specific lake. directory, place LakeEnsemblR configuration file, necessary LakeEnsemblR-format input files (e.g. meteorology, inflow, water temperature observations, hypsograph). Within directory, create empty folders model (FLake, GLM, GOTM, Simstrat, MyLake), place model-specific configuration files, corresponding information put config_files section LER config file.","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/articles/LakeEnsemblR_vignette.html","id":"export_config","dir":"Articles","previous_headings":"Workflow","what":"Export_config","title":"R package LakeEnsemblR: Basic Use and Sample Applications","text":", run export_config function, exports settings LER configuration file model-specific configuration files. possible run parts function, export_meteo, meteorological forcing thing changed, usually run export_config.","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/articles/LakeEnsemblR_vignette.html","id":"optional-changes-in-model-specific-directories","dir":"Articles","previous_headings":"Workflow","what":"Optional: changes in model-specific directories","title":"R package LakeEnsemblR: Basic Use and Sample Applications","text":"Optionally, can now go model-specific configuration files make changes. needed regular simulations, especially since can control parameters model_parameters section LER config file, option . example, want change depth inflow Simstrat model, go Simstrat folders make changes manually (script wrote). speaks changes done sure need, LakeEnsemblR provide support .","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/articles/LakeEnsemblR_vignette.html","id":"run_ensemble","dir":"Articles","previous_headings":"Workflow","what":"Run_ensemble","title":"R package LakeEnsemblR: Basic Use and Sample Applications","text":"next step call run_ensemble, runs models. new folder called “output” created, netcdf-file put results model runs. interested, model sub-folder also “output” folder, model-specific model output.","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/articles/LakeEnsemblR_vignette.html","id":"example-model-run","dir":"Articles","previous_headings":"Workflow","what":"Example model run","title":"R package LakeEnsemblR: Basic Use and Sample Applications","text":"See example run, post-processing data. Plotting model outputs easy using plot_heatmap() function:","code":"# Install packages - Ensure all packages are up to date devtools::install_github(\"aemon-j/GLM3r\", ref = \"v3.1.1\") devtools::install_github(\"USGS-R/glmtools\", ref = \"ggplot_overhaul\") devtools::install_github(\"aemon-j/FLakeR\", ref = \"inflow\") devtools::install_github(\"aemon-j/GOTMr\") devtools::install_github(\"aemon-j/gotmtools\") devtools::install_github(\"aemon-j/SimstratR\") devtools::install_github(\"aemon-j/MyLakeR\") devtools::install_github(\"aemon-j/LakeEnsemblR\")  # Load libraries library(LakeEnsemblR) library(ggplot2)  # Set working directory with example data from Lough Feeagh, Ireland template_folder <- system.file(\"extdata/feeagh\", package= \"LakeEnsemblR\") dir.create(\"example\") # Create example folder file.copy(from = template_folder, to = \"example\", recursive = TRUE) setwd(\"example/feeagh\") # Change working directory to example folder  # Set models & config file model <- c(\"GLM\",  \"FLake\", \"GOTM\", \"Simstrat\", \"MyLake\") config_file <- \"LakeEnsemblR.yaml\"  # 1. Example - creates directories with all model setup export_config(config_file = config_file, model = model, folder = \".\")   # 2. Run ensemble lake models wtemp_list <- run_ensemble(config_file = config_file,                            model = c(\"FLake\", \"GLM\", \"GOTM\", \"Simstrat\", \"MyLake\"),                            return_list = TRUE) g1 <- plot_heatmap(\"output/ensemble_output.nc\")  ggsave(\"output/model_ensemble_watertemp.png\", g1,  dpi = 300,width = 384,height = 300,        units = \"mm\")"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/articles/LakeEnsemblR_vignette.html","id":"post-processing","dir":"Articles","previous_headings":"Workflow","what":"Post-processing","title":"R package LakeEnsemblR: Basic Use and Sample Applications","text":"LakeEnsemblR successfully run lake models, can either extract output data netcdf file custom analysis plotting, use post-processing scripts initial look output.","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/articles/LakeEnsemblR_vignette.html","id":"quick-post-processing","dir":"Articles","previous_headings":"Workflow > Post-processing","what":"Quick post-processing","title":"R package LakeEnsemblR: Basic Use and Sample Applications","text":"Now model simulations finished, can extract data load_var, plot plot_ensemble. can extract data netcdf file analysis. ncdf4 R package supports working netcdf data R, PyNcView software (https://sourceforge.net/projects/pyncview/) can used look netcdf output.","code":"# Import the LER output into your workspace ens_out <- \"output/ensemble_output.nc\"  # Plot depth and time-specific results p <- plot_ensemble(ncdf = ens_out, model = c(\"FLake\", \"GLM\",  \"GOTM\", \"Simstrat\", \"MyLake\"),                    depth = 0.9, var = \"temp\",                    boxwhisker = TRUE, residuals = TRUE) # Take a look at the model fits to the observed data calc_fit(ncdf = \"output/ensemble_output.nc\",          model = c(\"FLake\", \"GLM\",  \"GOTM\", \"Simstrat\", \"MyLake\"),          var = \"temp\")  $FLake       rmse       nse         r      bias      mae      nmae 1 3.353107 0.6522126 0.6448119 -2.048613 2.090902 0.1863813  $GLM       rmse       nse         r      bias      mae      nmae 1 2.671799 0.5899169 0.8976564 -2.078693 2.116857 0.2334367  $GOTM       rmse       nse         r      bias      mae      nmae 1 2.076912 0.7515084 0.9373982 -1.642189 1.691141 0.1990019  $Simstrat       rmse       nse         r      bias      mae      nmae 1 2.517848 0.6347966 0.8378958 -1.237562 1.983922 0.2224387  $MyLake       rmse       nse         r      bias      mae      nmae 1 2.548408 0.6258777 0.9059941 -1.922304 1.958271 0.1946865  $ensemble_mean       rmse       nse         r      bias      mae      nmae 1 2.385461 0.6721914 0.9118315 -1.781649 1.874828 0.1992386 # Take a look at the model performance against residuals, time and depth plist <- plot_resid(ncdf = ens_out,var = \"temp\",                    model = c('FLake', 'GLM',  'GOTM', 'Simstrat', 'MyLake'))"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/articles/LakeEnsemblR_vignette.html","id":"further-custom-post-processing","dir":"Articles","previous_headings":"Workflow > Post-processing","what":"Further custom post-processing","title":"R package LakeEnsemblR: Basic Use and Sample Applications","text":"","code":"# Load post-processed output data into your workspace analyse_df <- analyse_ncdf(ncdf = ens_out, model = model, spin_up = NULL, drho = 0.1)  # Example plot the summer stratification period strat_df <- analyse_df$strat  p <- ggplot(strat_df, aes(model, TotStratDur)) +   geom_col() +   ylab(\"Total stratification duration [days]\") +   xlab(\"\") +   theme_classic() ggsave(\"output/model_ensemble_stratification.png\", p,  dpi = 300, width = 284,        height = 284, units = \"mm\")"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/articles/LakeEnsemblR_vignette.html","id":"adding-several-model-runs-to-a-single-netcdf-file","dir":"Articles","previous_headings":"Workflow > Post-processing","what":"Adding several model runs to a single netcdf file","title":"R package LakeEnsemblR: Basic Use and Sample Applications","text":"run_ensemble function allows add different model runs single netcdf file. done setting argument add = TRUE. model runs go time period use time steps can combined single netcdf file. Using functionality e.g. model runs different parametrizations can ran compared. Many diagnostic functions like calc_fit plot_ensemble two additional arguments dim dim_index select dimension used. argument dim can either “model” “member” dim_index gives index dimension used, e.g. netcdf file contains 3 different ensemble runs (member) two models “FLake” “GLM” calc_fit(\"ncfile.nc\", model = c(\"FLake\", \"GLM\"), dim = \"model\", dim_index = 2) calculates model performance model second ensemble run (dim_index = 2). Whereas,calc_fit(\"ncfile.nc\", model = c(\"FLake\", \"GLM\"), dim = \"member\", dim_index = 2) calculates performance model runs (members) GLM runs (second model).","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/articles/LakeEnsemblR_vignette.html","id":"model-calibration","dir":"Articles","previous_headings":"Workflow","what":"Model calibration","title":"R package LakeEnsemblR: Basic Use and Sample Applications","text":"LakeEnsemblR includes tools automatic model calibration included cali_ensemble() function. function profides three methods: method “LHC”: Lathin hypercube calibration method “MCMC”: Markov Chain Monte Carlo simulation using modMCMC function FME package (Soetaert Petzoldt (2010)) method “modFit”: model fitting using one algorithms provided modFit function FME package (Soetaert Petzoldt (2010)) details structure calibration section yaml config file see section 4.11. calibration process can run using cali_ensemble() function. Methods “LHC” “MCMC” write intermediate results .csv text files folder specified out_f argument. possible parallelize calibration procedure using parallel argument. distribute calibration models different cores. worth noting current state bottle neck computation speed running MyLake (written R significantly slower four models). can calibrate parameter like. However, guideline users familiar models, model-specific parameters calibrated previous studies: FLake: depth_w_lk, extincoef_optic, c_relax_C, fetch_lk, latitude_lk, depth_bs_lk, T_bs_lk, albedo, initial conditions (Salgado Le Moigne (2010)) (Bernhardt et al. (2012)) (Layden, MacCallum, Merchant (2016)) GLM: meteorological scaling factors (wind_factor, sw_factor, lw_factor), strmbd_slope, Kw, min_layer_thick, max_layer_thick, coef_mix_conv, coef_wind_stir, coef_mix_shear, coef_mix_turb, coef_mix_KH, coef_mix_hyp (Bueche, Hamilton, Vetter (2017)) (Bruce et al. (2018)) (Hipsey et al. (2019)) GOTM: Scaling factors heat, wind speed, shortwave radiation, k_min, g2 (Ayala, Moras, Pierson (2020)) Simstrat: a_seiche, f_wind, p_radin, p_albedo, q_nn, c10, cd (peeters_2002) (Gaudard et al. (2019)) MyLake: (Physical parameters :) C_shelter, swa_b1 (Less sensitive: dz I_scT, Kz_ak) (Saloranta (2006))","code":"calibration:                                   # Calibration section                                   # Calibration section    met:                                        # Meteo scaling parameter       wind_speed:                              # Wind speed scaling          lower: 0.5                            # lower bound for wind speed scaling                  upper: 2                              # upper bound for wind speed scaling          initial: 1                            # initial value for wind speed scaling          log: false                            # log transform scaling factor       swr:                                     # shortwave radiation scaling          lower: 0.5                            # lower bound for shortwave radiation scaling          upper: 1.5                            # upper bound for shortwave radiation scaling          initial: 1                            # initial value for shortwave radiation scaling          log: false                            # log transform scaling factor    Simstrat:                                # Simstrat specific parameters                                        a_seiche:          lower: 0.0008                         # lower bound for parameter          upper: 0.003                          # upper bound for parameter          initial: 0.001                        # initial value for parameter          log: false                            # log transform scaling factor                              MyLake:                                  # MyLake specific parameters                                          Phys.par/C_shelter:         lower: 0.14                            # lower bound for parameter         upper: 0.16                            # upper bound for parameter         initial: 0.15                          # initial value for parameter         log: false                             # log transform scaling factor       GOTM:                                    # GOTM specific parameters       turb_param/k_min:          lower: 5E-6                           # lower bound for parameter          upper: 5E-4                           # upper bound for parameter          initial: 1E-5                         # initial value for parameter          log: true    GLM:                               # GLM specific parameters       mixing/coef_mix_hyp:          lower: 0.1                       # lower bound for parameter          upper: 2                         # upper bound for parameter          initial: 1                       # initial value for parameter          log: false                       # log transform scaling factor    FLake:                             # FLake specific parameters       c_relax_C:          lower: 0.00003                  # lower bound for parameter          upper: 0.3                      # upper bound for parameter          initial: 0.003                  # initial value for parameter          log: true                       # log transform scaling factor"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/articles/LakeEnsemblR_vignette.html","id":"lhc-method","dir":"Articles","previous_headings":"Workflow > Model calibration","what":"LHC method","title":"R package LakeEnsemblR: Basic Use and Sample Applications","text":"“LHC” method sample number parameter sets definded num argument within bounds definded upper lower master config file. model given model argument set parameters consisting meteo scaling factors model spüecific parameters sampled model run set, calculating model performance indices run. parameter set model results written out_f folder. default model performance indices : rmse: root mean squared error nse: Nash-Sutcliff model efficiency r: Pearson corelation coefficient bias: mean error nmae: normalized mean absolute error can provide function calculate model performances using qualfun argument. provided function must take two arguments: observed data, simulated data, data.frames first column datetime columns depth specific values (lokking like return value get_output() function). function returns list entry every model, containing path files containing parameter sets model performance indices every model run.","code":"# calibrate the  cali_ensemble(config_file, model = c(\"GLM\", \"GOTM\", \"FLake\", \"MyLake\", \"Simstrat\"),               cmethod = \"LHC\", num = 300, out_f = \"calibration\")"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/articles/LakeEnsemblR_vignette.html","id":"mcmc-method","dir":"Articles","previous_headings":"Workflow > Model calibration","what":"MCMC method","title":"R package LakeEnsemblR: Basic Use and Sample Applications","text":"“MCMC” method utalizes modMCMC() function FME package (Soetaert Petzoldt (2010)), using adaptive Metropolis algorithm including delayed rejection procedure. Internally function calculates sum squares, equivalent -2 log(likelihood) Gaussian likelihood prior. MCMC run num evaluations every model. outcome every model call MCMC simulation written model specific file out_f folder, containing parameter values sum squares residuals. Additional arguments can supplied modMCMC() using ellipsis argument (...). function returns list entry every model, containing return value modMCMC() every model run.","code":"# calibrate the  cali_ensemble(config_file, model = c(\"GLM\", \"GOTM\", \"FLake\", \"MyLake\", \"Simstrat\"),               cmethod = \"MCMC\", num = 3000, out_f = \"calibration\")"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/articles/LakeEnsemblR_vignette.html","id":"modfit-method","dir":"Articles","previous_headings":"Workflow > Model calibration","what":"modFit method","title":"R package LakeEnsemblR: Basic Use and Sample Applications","text":"“modFit” method utalizes modFit() function FME package (Soetaert Petzoldt (2010)), Fitting model data. Additional arguments can supplied modFit() using ellipsis argument (...). function returns list entry every model, containing return value modFit() every model run.","code":"# calibrate the models using a Nelder-Mead algorithm cali_ensemble(config_file, model = c(\"GLM\", \"GOTM\", \"FLake\", \"MyLake\", \"Simstrat\"),               cmethod = \"modFit\", out_f = \"calibration\", method = \"Nelder-Mead\")"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/articles/LakeEnsemblR_vignette.html","id":"citation","dir":"Articles","previous_headings":"","what":"Citation","title":"R package LakeEnsemblR: Basic Use and Sample Applications","text":"See cite project. Although information included running function , like repeat case use cite LakeEnsemblR, also need cite individual models used simulations.","code":"citation(\"LakeEnsemblR\")"},{"path":[]},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Tadhg Moore. Maintainer.","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Tadhg N. Moore, Jorrit P. Mesman, Robert Ladwig, Johannes Feldbauer,  Freya Olsson, Rachel M. Pilla, Tom Shatwell, Jason J. Venkiteswaran,  Austin D. Delany, Hilary Dugan, Kevin C. Rose, Jordan S. Read  (2021).  LakeEnsemblR: R package facilitates ensemble  modelling lakes. Environ. Model. Softw., 143, 105101","code":"@Article{,   title = {{LakeEnsemblR}: An {R} package that facilitates ensemble modelling of lakes},   author = {Tadhg N. Moore and Jorrit P. Mesman and Robert Ladwig and Johannes Feldbauer and Freya Olsson and Rachel M. Pilla and Tom Shatwell and Jason J. Venkiteswaran and Austin D. Delany and Hilary Dugan and Kevin C. Rose and Jordan S. Read},   journal = {Environmental Modelling & Software},   year = {2021},   publisher = {Elsevier}, }"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/index.html","id":"lakeensemblr","dir":"","previous_headings":"","what":"Run Ensemble of Lake Models","title":"Run Ensemble of Lake Models","text":"Tools running ensemble lake models using standardised input data. Lake models currently incorporated Freshwater Lake Model (FLake), General Lake Model (GLM), General Ocean Turbulence Model (GOTM) (lake-branch), Simstrat, MyLake. can find example setups : https://github.com/aemon-j/LER_examples. Check published paper . v1.1, changes occurred configuration file. want adapt existing setup, see: https://github.com/aemon-j/LakeEnsemblR/wiki/-v1.0--v1.1","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Run Ensemble of Lake Models","text":"Prior installing package, need install packages run models tools manipulating model data GitHub. recommended time testing ensure packages --date parallel development might ongoing. {r gh-installation, eval = FALSE} #install.packages(\"remotes\") remotes::install_github(\"GLEON/rLakeAnalyzer\") remotes::install_github(\"aemon-j/GLM3r\", ref = \"v3.1.1\") remotes::install_github(\"USGS-R/glmtools\", ref = \"ggplot_overhaul\") remotes::install_github(\"aemon-j/FLakeR\", ref = \"inflow\") remotes::install_github(\"aemon-j/GOTMr\") remotes::install_github(\"aemon-j/gotmtools\") remotes::install_github(\"aemon-j/SimstratR\") remotes::install_github(\"aemon-j/MyLakeR\") Following can install LakeEnsemblR Github : {r gh-installation, eval = FALSE} # install.packages(\"remotes\") remotes::install_github(\"aemon-j/LakeEnsemblR\") run unexpected installation issues, please look page: https://github.com/aemon-j/LakeEnsemblR/wiki/Installation-issues","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/index.html","id":"visualize","dir":"","previous_headings":"Installation","what":"Visualize","title":"Run Ensemble of Lake Models","text":"can download PyNcView, cross-platform NetCDF viewer, viewing NetCDF output.","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/index.html","id":"example-model-run","dir":"","previous_headings":"","what":"Example model run","title":"Run Ensemble of Lake Models","text":"```{r gh-installation, eval = FALSE}","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/index.html","id":"load-lakeensemblr","dir":"","previous_headings":"","what":"Load LakeEnsemblR","title":"Run Ensemble of Lake Models","text":"library(LakeEnsemblR)","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/index.html","id":"copy-template-folder","dir":"","previous_headings":"","what":"Copy template folder","title":"Run Ensemble of Lake Models","text":"template_folder <- system.file(“extdata/feeagh”, package= “LakeEnsemblR”) dir.create(“example”) # Create example folder file.copy(= template_folder, = “example”, recursive = TRUE) setwd(“example/feeagh”) # Change working directory example folder","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/index.html","id":"set-config-file--models","dir":"","previous_headings":"","what":"Set config file & models","title":"Run Ensemble of Lake Models","text":"config_file <- “LakeEnsemblR.yaml” model <- c(“FLake”, “GLM”, “GOTM”, “Simstrat”, “MyLake”)","code":""},{"path":[]},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/index.html","id":"id_1-export-settings---creates-directories-with-all-model-setups-and-exports-settings-from-the-ler-configuration-file","dir":"","previous_headings":"","what":"1. Export settings - creates directories with all model setups and exports settings from the LER configuration file","title":"Run Ensemble of Lake Models","text":"export_config(config_file = config_file, model = model)","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/index.html","id":"id_2-run-ensemble-lake-models","dir":"","previous_headings":"","what":"2. Run ensemble lake models","title":"Run Ensemble of Lake Models","text":"run_ensemble(config_file = config_file, model = model)","code":"## Post-processing ```{r gh-installation, eval = FALSE}  # Load libraries for post-processing library(gotmtools) library(ggplot2)  ## Plot model output using gotmtools/ggplot2 # Extract names of all the variables in netCDF ncdf <- \"output/ensemble_output.nc\" vars <- gotmtools::list_vars(ncdf) vars # Print variables  p1 <- plot_heatmap(ncdf) p1 # Change the theme and increase text size for saving p1 <- p1 +   theme_classic(base_size = 24) +   scale_colour_gradientn(limits = c(0, 21),                          colours = rev(RColorBrewer::brewer.pal(11, \"Spectral\"))) # Save as a png file ggsave(\"output/ensemble_heatmap.png\", p1,  dpi = 300,width = 384,height = 280, units = \"mm\")"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/index.html","id":"plot-ensemble-output","dir":"","previous_headings":"","what":"Plot Ensemble output","title":"Run Ensemble of Lake Models","text":"```{r gh-installation, eval = FALSE} # Plot ensemble mean 0.9m model = c(“FLake”, “GLM”, “GOTM”, “Simstrat”, “MyLake”) plot_ensemble(ncdf = ncdf, model = model, var = “temp”, depth = 0.9)","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/index.html","id":"load-watertemp-from-netcdf-file-as-a-list","dir":"","previous_headings":"","what":"Load watertemp from netCDF file as a list","title":"Run Ensemble of Lake Models","text":"wtemp <- load_var(ncdf = ncdf, var = “temp”, return = “list”) names(wtemp)","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/index.html","id":"plot-residual-diagnostic-plots","dir":"","previous_headings":"","what":"Plot residual diagnostic plots","title":"Run Ensemble of Lake Models","text":"plots <- plot_resid(var_list = wtemp) # Plot residuals - returns list plots names(plots) #","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/index.html","id":"plot-residuals-vs-depth-res_depth","dir":"","previous_headings":"","what":"Plot residuals vs. depth (“res_depth”)","title":"Run Ensemble of Lake Models","text":"plots[[2]]","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/index.html","id":"analyse-the-netcdf-output","dir":"","previous_headings":"","what":"Analyse the netCDF output","title":"Run Ensemble of Lake Models","text":"<- analyse_ncdf(ncdf, model = model, spin_up = 0) names() str <- [[“strat”]] str[str$year == 2010, ] stats <- [[“stats”]] stats remotes::install_github(“aemon-j/GLM3r”, ref = “macOS”) remotes::install_github(“aemon-j/FLakeR”, ref = “macOS”) remotes::install_github(“aemon-J/GOTMr”, ref = “macOS”) remotes::install_github(“aemon-j/SimstratR”, ref = “macOS”) ``` Unfortunately, means version GLM differ compared one included executables Windows Linux. GLM macOS version 3.2.0a8 (recent one January 13, 2022), Windows/Linux use 3.1.1.","code":"See the [vignette](https://github.com/aemon-j/LakeEnsemblR/blob/master/vignettes/LakeEnsemblR_vignette.pdf) for further examples.   How do I setup `LakeEnsemblR` for my lake? ========================================================= Head on over to our [Wiki](https://github.com/aemon-j/LakeEnsemblR/wiki) for guides on how to set up your lake for LakeEnsemblR  How do I contribute new code back to the `LakeEnsemblR` project? ==========================================================  In order to contribute to this code, we recommend the following workflow:  1.  \"fork\" this repository to your own personal github account  2.  clone the github repository to your computer:      $git clone <git@github.com:{username}/LakeEnsemblR.git>  3.  modify code or add new functionality, save the code  4.  add the repository master to a remote master called \"upstream\"      $cd LakeEnsemblR      $git remote add upstream <git@github.com:aemon-j/LakeEnsemblR.git>  5.  before pushing your changes to your repository, pull in the current version of the aemon-j master:      $git fetch upstream  6.  merge these differences with your own \"master\" version:      $git merge upstream/master  7.  push your changes to your github repository, in addition to changes made by pulling in the aemon-j master:      $git push  8.  submit a pull request to aemon-j master using your account at github.com   Information for macOS users ========================================================= To ensure that all model binaries work, we advise you to install the specific macOS packages (currently in a separated branch):"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/LHC_model.html","id":null,"dir":"Reference","previous_headings":"","what":"wrapper function for LHC calibration — LHC_model","title":"wrapper function for LHC calibration — LHC_model","text":"wrapper function latin hypercube calibration, used cali_ensemble cmethod == \"LHC\".","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/LHC_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"wrapper function for LHC calibration — LHC_model","text":"","code":"LHC_model(   pars,   type,   model,   var,   config_file,   met,   folder,   out_f,   outf_n,   obs_deps,   obs_out,   out_hour,   qualfun,   config_f,   nout_fun )"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/LHC_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"wrapper function for LHC calibration — LHC_model","text":"pars data.frame parameter sets latinhypercube sampling, row set parameters model run. colnames must parameter names type character vector specifying type parameter. can either `\"met\"` meteo scaling \"model\" model specific parameters, must one value per column `pars` model model name run function var variable calculate model performance (usually `\"temp\"`) config_file path master config file met data.frame model specific meteo data, feed scale_meteo folder root folder out_f folder root folder output LHC written outf_n name output file model performance every parameter set written obs_deps depths observations obs_out data.frame observations `var` out_hour FLake specific: hout output qualfun function takes data.frames observations simulations returns model performance metrics nout_fun number values returned `qualfun`.","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/add_netcdf_output.html","id":null,"dir":"Reference","previous_headings":"","what":"Add output from model-specific model runs to netcdf file — add_netcdf_output","title":"Add output from model-specific model runs to netcdf file — add_netcdf_output","text":"Add data lists output, generated run_ensemble  netcdf file created earlier run run_ensemble","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/add_netcdf_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add output from model-specific model runs to netcdf file — add_netcdf_output","text":"","code":"add_netcdf_output(output_lists, folder = \".\", model, out_file)"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/add_netcdf_output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add output from model-specific model runs to netcdf file — add_netcdf_output","text":"output_lists list; list containing lists output (e.g. temperature, ice_height) folder filepath; folder contains model folders generated export_config() model vector; model export driving data. Options include c(\"GOTM\", \"GLM\", \"Simstrat\", \"FLake\", \"MyLake\") out_file filepath; save netCDF file defaults \"ensemble_output.nc\"","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/analyse_ncdf.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyse the output netCDF — analyse_ncdf","title":"Analyse the output netCDF — analyse_ncdf","text":"Analyse LER output neCDF produce summary statistics","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/analyse_ncdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyse the output netCDF — analyse_ncdf","text":"","code":"analyse_ncdf(   ncdf,   model,   dim = \"model\",   dim_index = 1,   spin_up = 0,   drho = 0.1 )  analyze_ncdf(   ncdf,   model,   dim = \"model\",   dim_index = 1,   spin_up = 0,   drho = 0.1 )"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/analyse_ncdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyse the output netCDF — analyse_ncdf","text":"ncdf filepath; `ensemble_output.nc` file model Vector models calculate performance measures dim character; NetCDF dimensions extract. Must either \"member\" \"model\". Defaults \"model\". used plotting netCDF file. Currently works \"model\". dim_index numeric; Index dimension chosen extract . Defaults 1. used plotting netCDF file. spin_up numeric; Number days disregard spin-analysis. drho numeric; density difference top bottom indicating stratification [kg m^-3]","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/analyse_ncdf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyse the output netCDF — analyse_ncdf","text":"list four dataframes: 'out_df' = long data frame date, depths, temp model, 'stats' = summary statistics model fitness compared observed mean differences modelled observed phenological events, 'strat' = stratification statistics year, 'obs_temp' = long dataframe observed data within netCDF file","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/analyse_ncdf.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Analyse the output netCDF — analyse_ncdf","text":"Tadhg Moore","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/analyse_ncdf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Analyse the output netCDF — analyse_ncdf","text":"","code":"if (FALSE) { # \\dontrun{ } # }"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/analyse_strat.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns stratification statstics — analyse_strat","title":"Returns stratification statstics — analyse_strat","text":"Returns stratification statstics: annual mean, max total length summer, winter stratification ice duration. NOTE: summer strat periods allocated year period starts. Winter stratification ice periods allocated year end.","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/analyse_strat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns stratification statstics — analyse_strat","text":"","code":"analyse_strat(data = NULL, Ts, Tb, dates, H_ice = NULL, drho = 0.1, NH = TRUE)  analyze_strat(data = NULL, Ts, Tb, dates, H_ice = NULL, drho = 0.1, NH = TRUE)"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/analyse_strat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns stratification statstics — analyse_strat","text":"data dataframe; water temperature data long format date, depths, value. Defaults NULL Ts vector;  surface temperatures corresponds date vector Tb vector; bottom temperatures corresponds date vector dates vector; POSIX style date corresponding rows Ts Tb. H_ice vector; ice thickness corresponds date vector, set NULL analysis required. Defaults NULL drho numeric; density difference top bottom indicating stratification [kg m^-3] NH boolean; northern hemisphere? TRUE FALSE. Defaults true","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/analyse_strat.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Returns stratification statstics — analyse_strat","text":"Tom Shatwell","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/analyse_strat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns stratification statstics — analyse_strat","text":"","code":"if (FALSE) { # \\dontrun{ strat <- analyse_strat(Ts = df[,2], Tb = df[,ncol(df)], dates = df[,1]) } # }"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/calc_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate model performance metrics — calc_fit","title":"Calculate model performance metrics — calc_fit","text":"Calculates model performace metrics netcdf file generated running `run_ensemble`","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/calc_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate model performance metrics — calc_fit","text":"","code":"calc_fit(   ncdf,   list = NULL,   model,   var = \"temp\",   dim = \"model\",   dim_index = 1,   qualfun = qual_fun,   avfun = \"mean\" )"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/calc_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate model performance metrics — calc_fit","text":"ncdf Path netcdf file generated running `run_ensemble` list Alternatively `ncdf` list siimulated variables, returned `run_ensemble()` argument `return_list = TRUE` model Vector models calculate performance measures var Variable calculate performance measures. Defaults \"temp\". dim character; NetCDF dimensions extract. Must either \"member\" \"model\". Defaults \"model\". used using netCDF file. Currently works \"model\". dim_index numeric; Index dimension chosen extract . Defaults 1. used using netCDF file. qualfun Function calculate performance measures. Per default calculates root mean suqared error (rmse), Nash-Shutcliff efficiency (nse), Pearson correlation (r), bias (bias), mean absolute error (mae), normalized mean absolute error (nmae), bias. Can function takes observed data first, simulated data time depth second argument. avfun Name function calculate ensemble average, defaults \"mean\"","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/calc_fit.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate model performance metrics — calc_fit","text":"Johannes Feldbauer","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/calc_fit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate model performance metrics — calc_fit","text":"","code":"if (FALSE) { # \\dontrun{ # using standard quality measures calc_fit(ncdf = \"output/ensemble_output.nc\",                    model = c(\"FLake\", \"GLM\",  \"GOTM\", \"Simstrat\", \"MyLake\"),                    var = \"temp\") # using own performance measure  calc_fit(ncdf = \"output/ensemble_output.nc\",                   model = c(\"FLake\", \"GLM\",  \"GOTM\", \"Simstrat\", \"MyLake\"),                   var = \"temp\", qualfun = function(O, S) mean(O - S, na.rm = TRUE)) } # }"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/calc_hmix.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate mixed-layer depth from temperature profiles — calc_hmix","title":"Estimate mixed-layer depth from temperature profiles — calc_hmix","text":"function estimates mixed depth. finds minimum curvature profile (maximum winter stratification) border surface mixed layer. finds thermocline depth maximum T-gradient. estimates mixed layer depth depth regression line surface layer temperatures intersects regression line thermocline temperatures. performs checks, like whether stratification exists (Ts-Tb) > threshold min.dT, whether thermocline surface layer, whether lake completely isothermal intersection (returns NA). mixed, assumes mixed layer depth maximum depth. also plots profile desired (plot=TRUE), marking surface layer inflection point red thermocline blue.","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/calc_hmix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate mixed-layer depth from temperature profiles — calc_hmix","text":"","code":"calc_hmix(   temps,   depths,   min.dT = 1,   therm.dz = 1,   min.hmix = 1.5,   plot = FALSE,   ... )"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/calc_hmix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate mixed-layer depth from temperature profiles — calc_hmix","text":"temps numeric vector water temperature degC. depths numeric vector corresponding depths (m) temps measurements min.dT numeric; minimum change water temperature therm.dz numeric; depth resolution calculating thermoclime min.hmix numeric; minimum depth hmix otherwise returns NA. Defaults 1.5m plot boolean; plot temperature profile calculated mixed depth. Defaults FALSE ... arguments passed base plot","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/calc_hmix.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Estimate mixed-layer depth from temperature profiles — calc_hmix","text":"Tom Shatwell","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/calc_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate model fitness and stratification statistics — calc_stats","title":"Calculate model fitness and stratification statistics — calc_stats","text":"Calculate model fitness stratification statistics model output.","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/calc_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate model fitness and stratification statistics — calc_stats","text":"","code":"calc_stats(   obs,   model,   depths,   folder = \".\",   NH,   flake_nml,   out_time,   par_file,   start,   out_hour = 0 )"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/calc_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate model fitness and stratification statistics — calc_stats","text":"obs dataframe; observation data LER standardised format model character; Model output analysed. Options include c('GOTM', 'GLM', 'Simstrat', 'FLake') depths vector; Depths analysed model output. folder filepath; folder contains model folders generated export_config() NH boolean; northern hemisphere? TRUE FALSE. Defaults true flake_nml filepath; FLake nml file. used model = 'FLake' out_time vector; output time values subset data passed `read_flake_out`. par_file filepath; Simstrat par file. used model = 'Simstrat' start character; start set origin Simstrat output out_hour numeric; hour output time values subset data  passed `read_flake_out`. used FLake model time step 86400s.","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/cali_ensemble.html","id":null,"dir":"Reference","previous_headings":"","what":"Calibrate models — cali_ensemble","title":"Calibrate models — cali_ensemble","text":"Use one three methods calibrate specified models.","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/cali_ensemble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calibrate models — cali_ensemble","text":"","code":"cali_ensemble(   config_file,   num = NULL,   param_file = NULL,   cmethod = \"LHC\",   qualfun = qual_fun,   parallel = FALSE,   job_name,   model = c(\"FLake\", \"GLM\", \"GOTM\", \"Simstrat\", \"MyLake\"),   folder = \".\",   spin_up = NULL,   out_f = \"cali\",   ncores = NULL,   tmp_dir = NULL,   ... )"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/cali_ensemble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calibrate models — cali_ensemble","text":"config_file file path; LakeEnsemblr yaml master config file num integer; number random parameter sets generate. param file provided num = number parameters file. param_file file path; previously created parameter file set. NULL creates new parameter set. Defaults NULL cmethod character; Method calibration. Can \"LHC\", \"LHC_old, \"MCMC\" \"modFit\". Defaults \"LHC\". LHC LHC_old differ way parallelization set , whereas new default LHC version efficient LHC_old kept possible backwards compatibility. qualfun function; function calculates measure fit observed simulated variables, takes two arguments Observed Simulated parallel Boolean; model calibration parallelized job_name character; optional name use RStudio job output variable name. syntactically valid name. Check webpage info jobs: https://blog.rstudio.com/2019/03/14/rstudio-1-2-jobs/ model vector; model export driving data. Options include c(\"GOTM\", \"GLM\", \"Simstrat\", \"FLake\", \"MyLake\") folder file path; folder contains model folders generated export_config() spin_up numeric; Number days disregard spin-analysis. out_f character; name folder store results ncores numeric; number cores used. NULL, default `parallel::detectCores() - 1`. tmp_dir location temporary files LHC calibration parallel stored ... additional arguments passed FME::modFit FME::modMCMC. used method modFit MCMC","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/cali_ensemble.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calibrate models — cali_ensemble","text":"Parallelisation done using `parallel` package `parLapply()`. number    cores used set value specified `ncores`.","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/cali_ensemble.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calibrate models — cali_ensemble","text":"","code":"if (FALSE) { # \\dontrun{  config_file <- 'LakeEnsemblR.yaml'  # LHC method cali_ensemble(config_file = config_file, num = 200, cmethod = \"LHC\",              model = c(\"FLake\", \"GLM\", \"GOTM\", \"Simstrat\", \"MyLake\"))  # MCMC method resMCMC <- cali_ensemble(config_file = config_file, num = 200, cmethod = \"MCMC\",                          model = c(\"FLake\", \"GLM\", \"GOTM\", \"Simstrat\", \"MyLake\"))  # modFit method using the Nelder-Mead algorithm resMmodFit <- cali_ensemble(config_file = config_file, num = 200, cmethod = \"modFit\",                             model = c(\"FLake\", \"GLM\", \"GOTM\", \"Simstrat\", \"MyLake\"),                             method = \"Nelder-Mead\")  # LHC method using multiple cores cali_ensemble(config_file = config_file, num = 200, cmethod = \"LHC\",              model = c(\"FLake\", \"GLM\", \"GOTM\", \"Simstrat\", \"MyLake\"),              parallel = TRUE)  # LHC method deployed as a job cali_ensemble(config_file = config_file, num = 200, cmethod = \"LHC\",              model = c(\"FLake\", \"GLM\", \"GOTM\", \"Simstrat\", \"MyLake\"),              job_name = \"test\") test # View output from job  } # }"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/change_pars.html","id":null,"dir":"Reference","previous_headings":"","what":"Change parameter or meteo scaling for a model — change_pars","title":"Change parameter or meteo scaling for a model — change_pars","text":"Input specific parameter scale meteorological forcing selected model","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/change_pars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change parameter or meteo scaling for a model — change_pars","text":"","code":"change_pars(config_file, model, pars, type, met, folder)"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/change_pars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change parameter or meteo scaling for a model — change_pars","text":"config_file path master config file model name model pars named vector parameters change type character vector specifying type parameter. can either `\"met\"` meteo scaling \"model\" model specific parameters, must length `pars` met data.frame model specific meteo data, feed scale_meteo folder root folder","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/check_master_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Check master config file — check_master_config","title":"Check master config file — check_master_config","text":"Check master config file correct","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/check_master_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check master config file — check_master_config","text":"","code":"check_master_config(   config_file,   model = c(\"GOTM\", \"GLM\", \"Simstrat\", \"FLake\", \"MyLake\"),   exp_cnf = FALSE )"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/check_master_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check master config file — check_master_config","text":"config_file filepath; LakeEnsemblr yaml master config file model vector; model export driving data. Options include c(\"GOTM\", \"GLM\", \"Simstrat\", \"FLake\", \"MyLake\") exp_cnf boolean; check control files models ","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/cost_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Run a model and calculate model cost — cost_model","title":"Run a model and calculate model cost — cost_model","text":"Runns selected model calculates fit metrics using provided funtion","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/cost_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run a model and calculate model cost — cost_model","text":"","code":"cost_model(   config_file,   model,   var,   folder,   obs_deps,   obs_out,   out_hour,   qualfun,   config_f )"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/cost_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run a model and calculate model cost — cost_model","text":"config_file path master config file model name model var name variable calculate model performance folder root folder obs_deps depths observations obs_out data.frame observations `var` out_hour FLake specific: hout output qualfun function takes data.frames observations simulations returns model performance metrics config_f path model specific control file (e.g. \"GLM/glm3.nml\")","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/create_netcdf_output.html","id":null,"dir":"Reference","previous_headings":"","what":"Create netcdf output from model-specific model runs — create_netcdf_output","title":"Create netcdf output from model-specific model runs — create_netcdf_output","text":"Create netcdf lists output, generated run_ensemble","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/create_netcdf_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create netcdf output from model-specific model runs — create_netcdf_output","text":"","code":"create_netcdf_output(   output_lists,   folder = \".\",   model,   out_time,   longitude = 0,   latitude = 0,   compression = 4,   members = 25,   out_file = \"ensemble_output.nc\" )"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/create_netcdf_output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create netcdf output from model-specific model runs — create_netcdf_output","text":"output_lists list; list containing lists output (e.g. temperature, ice_height) folder filepath; folder contains model folders generated export_config() model vector; model export driving data. Options include c(\"GOTM\", \"GLM\", \"Simstrat\", \"FLake\", \"MyLake\") out_time data frame; data frame column (\"datetime\"), describing times output generated longitude numeric; longitude lake added netCDF file latitude numeric; latitude lake added netCDF file compression integer;1 (least compression) 9 (compression), enables compression variable written file. Turning compression forces created file netcdf version 4 format. members integer; number members netCDF file. out_file filepath; save netCDF file defaults \"ensemble_output.nc\"","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/export_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Export model configuration setups — export_config","title":"Export model configuration setups — export_config","text":"Exports settings master LakeEnsemblR config file","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/export_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export model configuration setups — export_config","text":"","code":"export_config(   config_file,   model = c(\"GOTM\", \"GLM\", \"Simstrat\", \"FLake\", \"MyLake\"),   dirs = TRUE,   time = TRUE,   location = TRUE,   output_settings = TRUE,   meteo = TRUE,   init_cond = TRUE,   extinction = TRUE,   flow = TRUE,   model_parameters = TRUE,   folder = \".\" )"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/export_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export model configuration setups — export_config","text":"config_file name master LakeEnsemblR config file model vector; model export configuration file . Options include c(\"GOTM\", \"GLM\", \"Simstrat\", \"FLake\", \"MyLake\") dirs boolean; create directories model needed copies templates. Calls export_dirs. Defaults TRUE time boolean; exports time settings. Calls export_time. Defaults TRUE. location boolean; exports location hypsograph settings. Calls export_location. Defaults TRUE. output_settings boolean; exports output settings. Calls export_output_settings. Defaults TRUE. meteo boolean; export meteorology data. Calls export_meteo. Defaults TRUE. init_cond boolean; export initial conditions. Calls export_init_cond. Defaults TRUE. extinction boolean; export light extinction data. Calls export_extinction. Defaults TRUE. flow boolean; export flow settings. Calls export_flow. Defaults TRUE. model_parameters boolean; export model parameters specificed yaml configuration file. Calls export_model_parameters. Defaults TRUE. folder folder","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/export_config.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Export model configuration setups — export_config","text":"Tadhg Moore, Jorrit Mesman, Johannes Feldbauer, Robert Ladwig","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/export_config.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export model configuration setups — export_config","text":"","code":"if (FALSE) { # \\dontrun{ config_file <- \"LakeEnsemblR.yaml\" export_config(config_file = config_file,               model = c(\"FLake\", \"GLM\", \"GOTM\", \"Simstrat\", \"MyLake\"),               folder = \".\") } # }"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/export_dirs.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates directories for each model — export_dirs","title":"Creates directories for each model — export_dirs","text":"Creates directories file setups model, based master LakeEnsemblR config file","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/export_dirs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates directories for each model — export_dirs","text":"","code":"export_dirs(   config_file,   model = c(\"GOTM\", \"GLM\", \"Simstrat\", \"FLake\", \"MyLake\"),   folder = \".\" )"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/export_dirs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates directories for each model — export_dirs","text":"config_file name master LakeEnsemblR config file model vector; model export configuration file. Options include c(\"GOTM\", \"GLM\", \"Simstrat\", \"FLake\", \"MyLake\") folder folder","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/export_extinction.html","id":null,"dir":"Reference","previous_headings":"","what":"Export extinction coefficients — export_extinction","title":"Export extinction coefficients — export_extinction","text":"Exports extinction coefficients model based master LakeEnsemblR config file","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/export_extinction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export extinction coefficients — export_extinction","text":"","code":"export_extinction(   config_file,   model = c(\"GOTM\", \"GLM\", \"Simstrat\", \"FLake\", \"MyLake\"),   folder = \".\" )"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/export_extinction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export extinction coefficients — export_extinction","text":"config_file name master LakeEnsemblR config file model vector; model export configuration file. Options include c(\"GOTM\", \"GLM\", \"Simstrat\", \"FLake\", \"MyLake\") folder folder","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/export_flow.html","id":null,"dir":"Reference","previous_headings":"","what":"Export LakeEnsemblR standardised flow files to model specific driver format — export_flow","title":"Export LakeEnsemblR standardised flow files to model specific driver format — export_flow","text":"Export - anbd -flow driver files model","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/export_flow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export LakeEnsemblR standardised flow files to model specific driver format — export_flow","text":"","code":"export_flow(   config_file,   model = c(\"GOTM\", \"GLM\", \"Simstrat\", \"FLake\", \"MyLake\"),   folder = \".\" )"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/export_flow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export LakeEnsemblR standardised flow files to model specific driver format — export_flow","text":"config_file filepath; LakeEnsemblr yaml master config file model vector; model export driving data. Options include c(\"GOTM\", \"GLM\", \"Simstrat\", \"FLake\", \"MyLake\") folder filepath; folder contains model folders generated export_config()","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/export_flow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export LakeEnsemblR standardised flow files to model specific driver format — export_flow","text":"","code":"if (FALSE) { # \\dontrun{ export_flow(config_file, model = c(\"GOTM\", \"GLM\", \"Simstrat\", \"FLake\", \"MyLake\")) } # }"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/export_init_cond.html","id":null,"dir":"Reference","previous_headings":"","what":"Export initial conditions into each model setup from the LakeEnsemblR standardized input for observed temperature profile — export_init_cond","title":"Export initial conditions into each model setup from the LakeEnsemblR standardized input for observed temperature profile — export_init_cond","text":"Export initial condition files input model configuration files.","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/export_init_cond.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export initial conditions into each model setup from the LakeEnsemblR standardized input for observed temperature profile — export_init_cond","text":"","code":"export_init_cond(   config_file,   model = c(\"GOTM\", \"GLM\", \"Simstrat\", \"FLake\", \"MyLake\"),   date = NULL,   print = TRUE,   folder = \".\" )"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/export_init_cond.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export initial conditions into each model setup from the LakeEnsemblR standardized input for observed temperature profile — export_init_cond","text":"config_file filepath; LakeEnsemblr yaml master config file model vector; model export driving data. Options include c('GOTM', 'GLM', 'Simstrat', 'FLake') date character; Date \"YYYY-mm-dd HH:MM:SS\" format extract initial profile. NULL, observations file specified config_file used extract date. print logical; Prints temperature profile console folder filepath; folder contains model folders generated export_config()","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/export_location.html","id":null,"dir":"Reference","previous_headings":"","what":"Export location settings for each model — export_location","title":"Export location settings for each model — export_location","text":"Exports settings like hypsograph, coordinates ice settings,  based master LakeEnsemblR config file","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/export_location.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export location settings for each model — export_location","text":"","code":"export_location(   config_file,   model = c(\"GOTM\", \"GLM\", \"Simstrat\", \"FLake\", \"MyLake\"),   folder = \".\" )"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/export_location.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export location settings for each model — export_location","text":"config_file name master LakeEnsemblR config file model vector; model export configuration file. Options include c(\"GOTM\", \"GLM\", \"Simstrat\", \"FLake\", \"MyLake\") folder folder","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/export_meteo.html","id":null,"dir":"Reference","previous_headings":"","what":"Export LakeEnsemblR standardized input to model specific driver format — export_meteo","title":"Export LakeEnsemblR standardized input to model specific driver format — export_meteo","text":"Export driver files model","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/export_meteo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export LakeEnsemblR standardized input to model specific driver format — export_meteo","text":"","code":"export_meteo(   config_file,   model = c(\"GOTM\", \"GLM\", \"Simstrat\", \"FLake\", \"MyLake\"),   folder = \".\" )"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/export_meteo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export LakeEnsemblR standardized input to model specific driver format — export_meteo","text":"config_file filepath; LakeEnsemblr yaml master config file model vector; model export driving data. Options include c('GOTM', 'GLM', 'Simstrat', 'FLake') folder filepath; folder contains model folders generated export_config()","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/export_meteo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export LakeEnsemblR standardized input to model specific driver format — export_meteo","text":"","code":"if (FALSE) { # \\dontrun{ export_meteo(model = c('GOTM', 'GLM', 'Simstrat', 'FLake'),              meteo_file = 'LakeEnsemblR_meteo_standard.csv') } # }"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/export_model_parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Export model-specific parameters — export_model_parameters","title":"Export model-specific parameters — export_model_parameters","text":"Exports model-specific parameters specified model_parameters  section master config file.","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/export_model_parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export model-specific parameters — export_model_parameters","text":"","code":"export_model_parameters(   config_file,   model = c(\"GOTM\", \"GLM\", \"Simstrat\", \"FLake\", \"MyLake\"),   folder = \".\" )"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/export_model_parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export model-specific parameters — export_model_parameters","text":"config_file name master LakeEnsemblR config file model vector; model export configuration file. Options include c(\"FLake\", \"GLM, \"GOTM\", \"Simstrat\", \"MyLake\") folder folder","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/export_output_settings.html","id":null,"dir":"Reference","previous_headings":"","what":"Export output settings for each model — export_output_settings","title":"Export output settings for each model — export_output_settings","text":"Exports settings related output (time step, format),  model","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/export_output_settings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export output settings for each model — export_output_settings","text":"","code":"export_output_settings(   config_file,   model = c(\"GOTM\", \"GLM\", \"Simstrat\", \"FLake\", \"MyLake\"),   folder = \".\" )"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/export_output_settings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export output settings for each model — export_output_settings","text":"config_file name master LakeEnsemblR config file model vector; model export configuration file. Options include c(\"GOTM\", \"GLM\", \"Simstrat\", \"FLake\", \"MyLake\") folder folder","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/export_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Export time settings for each model — export_time","title":"Export time settings for each model — export_time","text":"Exports settings like start end time time step,  based master LakeEnsemblR config file","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/export_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export time settings for each model — export_time","text":"","code":"export_time(   config_file,   model = c(\"GOTM\", \"GLM\", \"Simstrat\", \"FLake\", \"MyLake\"),   folder = \".\" )"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/export_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export time settings for each model — export_time","text":"config_file name master LakeEnsemblR config file model vector; model export configuration file. Options include c(\"GOTM\", \"GLM\", \"Simstrat\", \"FLake\", \"MyLake\") folder folder","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/format_inflow.html","id":null,"dir":"Reference","previous_headings":"","what":"Format inflow data for each model — format_inflow","title":"Format inflow data for each model — format_inflow","text":"Format dataframe shape specified model","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/format_inflow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format inflow data for each model — format_inflow","text":"","code":"format_inflow(inflow, model, config_file, folder = \".\")"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/format_inflow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format inflow data for each model — format_inflow","text":"inflow dataframe; read.csv() standardised input. model character; Model scaling parameters applied. Options include c('GOTM', 'GLM', 'Simstrat', 'FLake') config_file filepath; LER config yaml file. used model = 'GOTM' folder filepath; folder contains model folders generated export_config()","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/format_inflow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format inflow data for each model — format_inflow","text":"dataframe met data model format","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/format_outflow.html","id":null,"dir":"Reference","previous_headings":"","what":"Format outflow data for each model — format_outflow","title":"Format outflow data for each model — format_outflow","text":"Format dataframe shape specified model","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/format_outflow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format outflow data for each model — format_outflow","text":"","code":"format_outflow(outflow, model, config_file, folder = \".\")"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/format_outflow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format outflow data for each model — format_outflow","text":"outflow dataframe; read.csv() standardised input. model character; Model scaling parameters applied. Options include c('GOTM', 'GLM', 'Simstrat', 'FLake') config_file filepath; LER config yaml file. used model = 'GOTM' folder filepath; folder contains model folders generated export_config()","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/format_outflow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format outflow data for each model — format_outflow","text":"dataframe met data model format","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/get_config_value.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract value from any LER model config file — get_config_value","title":"Extract value from any LER model config file — get_config_value","text":"Wrapper function functions extract values model config files","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/get_config_value.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract value from any LER model config file — get_config_value","text":"","code":"get_config_value(model, file, label, key)"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/get_config_value.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract value from any LER model config file — get_config_value","text":"model string; name model LER package file filepath; model-specific config file label string; corresponds section key located key string; name key extract value","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/get_config_value.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract value from any LER model config file — get_config_value","text":"","code":"if (FALSE) { # \\dontrun{ get_config_value(model = \"GOTM\", file = \"gotm.yaml\", label = \"turb_param\", key = \"k_min\") } # }"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/get_json_value.html","id":null,"dir":"Reference","previous_headings":"","what":"Extracts values from a json file — get_json_value","title":"Extracts values from a json file — get_json_value","text":"Extracts values json file locating label key within json file.","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/get_json_value.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extracts values from a json file — get_json_value","text":"","code":"get_json_value(file, label, key)"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/get_json_value.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extracts values from a json file — get_json_value","text":"file filepath; json file label string; corresponds section key located key string; name key extract value","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/get_json_value.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extracts values from a json file — get_json_value","text":"Tadhg Moore, Jorrit Mesman","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/get_json_value.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extracts values from a json file — get_json_value","text":"","code":"if (FALSE) { # \\dontrun{ input_json(file = \"samp.par\", label = \"ModelParameters\", key = \"f_wind\", value = 1.2, out_file = NULL) } # }"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/get_model_met_name.html","id":null,"dir":"Reference","previous_headings":"","what":"get the name of model meteo file — get_model_met_name","title":"get the name of model meteo file — get_model_met_name","text":"get name meteo file model config file","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/get_model_met_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get the name of model meteo file — get_model_met_name","text":"","code":"get_model_met_name(model, config_f)"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/get_model_met_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get the name of model meteo file — get_model_met_name","text":"model Model name config_f path model specific controll file","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/get_mylakeconfig_value.html","id":null,"dir":"Reference","previous_headings":"","what":"Extracts values from the MyLake config file — get_mylakeconfig_value","title":"Extracts values from the MyLake config file — get_mylakeconfig_value","text":"Extracts values MyLake config file locating label key within file.","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/get_mylakeconfig_value.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extracts values from the MyLake config file — get_mylakeconfig_value","text":"","code":"get_mylakeconfig_value(file, label, key)"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/get_mylakeconfig_value.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extracts values from the MyLake config file — get_mylakeconfig_value","text":"file filepath; R object (loaded Rdata file) label string; corresponds section key located key string; name key extract value","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/get_output.html","id":null,"dir":"Reference","previous_headings":"","what":"Get output data for each model — get_output","title":"Get output data for each model — get_output","text":"Get output data model","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/get_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get output data for each model — get_output","text":"","code":"get_output(   config_file,   model,   vars,   obs_depths = NULL,   folder = \".\",   out_time,   out_hour )"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/get_output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get output data for each model — get_output","text":"config_file filepath; LER config yaml file. used model = 'GOTM' model character; Model scaling parameters applied. Options include c('GOTM', 'GLM', 'Simstrat', 'FLake') vars vector; variables extract FLake output. Currently just temp ice obs_depths vector; Observation depths. Defaults NULL folder filepath; folder contains model folders generated export_config(). Defaults '.' out_time vector; output time values subset data . out_hour numeric; hour output time values subset data. used FLake model time step 86400s.","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/get_output.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get output data for each model — get_output","text":"dataframe list output variables","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/get_template.html","id":null,"dir":"Reference","previous_headings":"","what":"Copies LakeEnsemblR template from package to specified folder — get_template","title":"Copies LakeEnsemblR template from package to specified folder — get_template","text":"Copies LakeEnsemblR template package specified folder used    example setting simulation.","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/get_template.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copies LakeEnsemblR template from package to specified folder — get_template","text":"","code":"get_template(template = NULL, folder = \".\", filename = NULL, overwrite = FALSE)"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/get_template.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copies LakeEnsemblR template from package to specified folder — get_template","text":"template string; name file want get template . case NULL, potential options given. \"\" returns templates. folder filepath; filepath copy templates filename string; filename (including .filetype). Default NULL, standard name overwrite boolean; overwrite existing files","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/get_yaml_multiple.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract values from yaml file — get_yaml_multiple","title":"Extract values from yaml file — get_yaml_multiple","text":"Extract values yaml file, like gotmtools::get_yaml_value  However, unlimited amount keys can provided.  NOTE: use yaml parser yaml formatting errors  function pick .","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/get_yaml_multiple.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract values from yaml file — get_yaml_multiple","text":"","code":"get_yaml_multiple(file = \"gotm.yaml\", ...)"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/get_yaml_multiple.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract values from yaml file — get_yaml_multiple","text":"file filepath; yaml file wish edit ... string key1, key2, etc.: multiple keys pointing toward line want edit yaml file. Keys must listed consecutively, without skipping numbers.","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/get_yaml_multiple.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract values from yaml file — get_yaml_multiple","text":"Jorrit Mesman","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/get_yaml_multiple.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract values from yaml file — get_yaml_multiple","text":"","code":"if (FALSE) { # \\dontrun{ get_yaml_multiple(file = \"example.yaml\", key1 = \"streams\", key2 = \"inflow\", key3 = \"file\") } # }"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/input_config_value.html","id":null,"dir":"Reference","previous_headings":"","what":"Inputs value into any LER model config file — input_config_value","title":"Inputs value into any LER model config file — input_config_value","text":"Wrapper function functions input values model config files","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/input_config_value.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inputs value into any LER model config file — input_config_value","text":"","code":"input_config_value(   model,   folder = \".\",   file,   label,   key,   value,   out_file = NULL )"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/input_config_value.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inputs value into any LER model config file — input_config_value","text":"model string; name model LER package folder file path; folder contains model folders generated export_config() file filepath; model-specific config file label string; corresponds section key located key string; name key extract value value string; name value input config file out_file filepath; write output json file (optional); defaults overwriting file specified","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/input_config_value.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Inputs value into any LER model config file — input_config_value","text":"","code":"if (FALSE) { # \\dontrun{ input_config_value(model = \"GOTM\", file = \"gotm.yaml\",   label = \"turb_param\", key = \"k_min\", value = 0.00001) } # }"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/input_json.html","id":null,"dir":"Reference","previous_headings":"","what":"Input values into json file — input_json","title":"Input values into json file — input_json","text":"Inputs values json file locating label key within json file.  Preserves comments (!) present.  NOTE: use json parser json formatting errors  function pick .","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/input_json.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Input values into json file — input_json","text":"","code":"input_json(file, label, key, value, out_file = NULL)"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/input_json.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Input values into json file — input_json","text":"file filepath; json file wish edit label string; corresponds section key located key string; name key input value value string; input key/value pair. Note boolean values must input 'true'/'false' per json format out_file filepath; write output json file (optional); defaults overwriting file specified","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/input_json.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Input values into json file — input_json","text":"Tadhg Moore, Jorrit Mesman","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/input_json.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Input values into json file — input_json","text":"","code":"if (FALSE) { # \\dontrun{ input_json(file = \"samp.par\", label = \"ModelParameters\", key = \"f_wind\", value = 1.2, out_file = NULL) } # }"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/input_mylakeconfig.html","id":null,"dir":"Reference","previous_headings":"","what":"Inputs value into the MyLake config file — input_mylakeconfig","title":"Inputs value into the MyLake config file — input_mylakeconfig","text":"Inputs value MyLake config file locating label key within file.","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/input_mylakeconfig.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inputs value into the MyLake config file — input_mylakeconfig","text":"","code":"input_mylakeconfig(file, label, key, value, out_file = NULL)"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/input_mylakeconfig.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inputs value into the MyLake config file — input_mylakeconfig","text":"file filepath; R object (loaded Rdata file) label string; corresponds section key located key string; name key extract value value string; name key extract value out_file filepath; write output config file (optional); defaults overwriting file specified","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/input_yaml_multiple.html","id":null,"dir":"Reference","previous_headings":"","what":"Inputs values into yaml file — input_yaml_multiple","title":"Inputs values into yaml file — input_yaml_multiple","text":"Inputs values yaml file, like gotmtools::input_yaml  However, unlimited amount keys can provided.  Preserves comments (#) present.  NOTE: use yaml parser yaml formatting errors  function pick .","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/input_yaml_multiple.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inputs values into yaml file — input_yaml_multiple","text":"","code":"input_yaml_multiple(   file = \"gotm.yaml\",   value,   out_file = NULL,   verbose = TRUE,   ... )"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/input_yaml_multiple.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inputs values into yaml file — input_yaml_multiple","text":"file filepath; yaml file wish edit value string; input yaml file. Note boolean values must input \"true\"/\"false\" per json format out_file filepath; write output json file (optional); defaults overwriting file specified verbose Logical; output message values replaced ... string key1, key2, etc.: multiple keys pointing toward line want edit yaml file. Keys must listed consecutively, without skipping numbers.","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/input_yaml_multiple.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Inputs values into yaml file — input_yaml_multiple","text":"Jorrit Mesman","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/input_yaml_multiple.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Inputs values into yaml file — input_yaml_multiple","text":"","code":"if (FALSE) { # \\dontrun{ input_yaml_multiple(file = \"example.yaml\", value = \"something\",   key1 = \"streams\", key2 = \"inflow\", key3 = \"file\") } # }"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/load_LHC_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot results of LHC calibration — load_LHC_results","title":"Plot results of LHC calibration — load_LHC_results","text":"Plot results calibration done using `cali_ensemble()` function cmethod = \"LHC\".","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/load_LHC_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot results of LHC calibration — load_LHC_results","text":"","code":"load_LHC_results(config_file, model, res_files)"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/load_LHC_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot results of LHC calibration — load_LHC_results","text":"config_file filepath; LakeEnsemblr yaml master config file `cali_ensemble()` run. model vector; model export driving data. Options include c(\"GOTM\", \"GLM\", \"Simstrat\", \"FLake\") res_files vector paths parameter result files generated `cali_ensemble()` (return value running `cali_ensemble()` cmethod = \"LHC\").","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/load_var.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract variables from NetCDF file — load_var","title":"Extract variables from NetCDF file — load_var","text":"Extracts selected parameter netCDF file formats dataframe.","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/load_var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract variables from NetCDF file — load_var","text":"","code":"load_var(   ncdf,   var,   return = \"list\",   dim = \"model\",   dim_index = 1,   print = TRUE )"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/load_var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract variables from NetCDF file — load_var","text":"ncdf filepath; Name netCDF file extract variable var character; Name variable extracted. Must match short name netCDF file return character; Must either list array dim character; NetCDF dimensions extract. Must either \"member\" \"model\". Defaults \"model\". dim_index numeric; Index dimension chosen extract . Defaults 1. print logical; Print name units variable extracted, defaults TRUE","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/load_var.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract variables from NetCDF file — load_var","text":"dataframe format observation file surface top column bottom last column.","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/make_script.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a script to then run as a job — make_script","title":"Creates a script to then run as a job — make_script","text":"Creates script run job","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/make_script.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a script to then run as a job — make_script","text":"","code":"make_script(call, name)"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/make_script.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a script to then run as a job — make_script","text":"call object class `call“ name name job","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/plot_LHC.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot results of LHC calibration — plot_LHC","title":"Plot results of LHC calibration — plot_LHC","text":"Plot results calibration done using `cali_ensemble()` function cmethod = \"LHC\".","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/plot_LHC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot results of LHC calibration — plot_LHC","text":"","code":"plot_LHC(   config_file,   model,   res_files,   qual_met = \"rmse\",   best_quant = 0.1,   best = \"low\" )"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/plot_LHC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot results of LHC calibration — plot_LHC","text":"config_file filepath; LakeEnsemblr yaml master config file `cali_ensemble()` run. model vector; model export driving data. Options include c(\"GOTM\", \"GLM\", \"Simstrat\", \"FLake\") res_files vector paths parameter result files generated `cali_ensemble()` (return value running `cali_ensemble()` cmethod = \"LHC\"). qual_met Name performance metric use. ;ust column name model result files. best_quant Quantile wich distribution parameetrs plotted best character can euther \"low\" \"high\", specifying low high values performance metric imply good model performance","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/plot_ensemble.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to plot results of the ensemble run — plot_ensemble","title":"Function to plot results of the ensemble run — plot_ensemble","text":"Plot outcome ensemble run given depth along minimum, maximum, average value.","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/plot_ensemble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to plot results of the ensemble run — plot_ensemble","text":"","code":"plot_ensemble(   ncdf,   model = c(\"FLake\", \"GLM\", \"GOTM\", \"Simstrat\", \"MyLake\"),   var = \"temp\",   dim = \"model\",   dim_index = 1,   depth = NULL,   date = NULL,   av_fun = \"mean\",   residuals = FALSE,   boxwhisker = FALSE )"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/plot_ensemble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to plot results of the ensemble run — plot_ensemble","text":"ncdf filepath; netcdf file created `run_ensemble()` model string vector; models included plot var string; variable plot dim string; NetCDF dimensions extract. Must either \"member\" \"model\". Defaults \"model\". used plotting netCDF file. dim_index numeric; Index dimension chosen extract . Defaults 1. used plotting netCDF file. depth `var` depth dimension, depth plotted? date Specific date depth profiles plotted av_fun Averaging function use, defaults arithmetic mean (`mean()`) residuals Create additional plot model residuals time boxwhisker Create additional box-whisker plots model","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/plot_ensemble.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Function to plot results of the ensemble run — plot_ensemble","text":"Johannes Feldbauer, Robert Ladwig, Jorrit Mesman","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/plot_ensemble.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to plot results of the ensemble run — plot_ensemble","text":"","code":"if (FALSE) { # \\dontrun{ # time series p1 <- plot_ensemble(ncdf = \"output/ensemble_output.nc\",                    model = c('FLake', 'GLM',  'GOTM', 'Simstrat', 'MyLake'),                    var = \"temp\", depth = 0.9, boxwhisker = TRUE)  # depth profiles p2 <- plot_ensemble(ncdf = \"output/ensemble_output.nc\",                    model = c('FLake', 'GLM',  'GOTM', 'Simstrat', 'MyLake'),                    var = \"temp\", date = as.POSIXct(\"2010-06-13\", tz = \"UTC\"),                    boxwhisker = TRUE)  } # }"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/plot_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot heat map of ensemble model output — plot_heatmap","title":"Plot heat map of ensemble model output — plot_heatmap","text":"Plot heat map ensemble output data. can either plot directly netCDF file list format loaded `load_var()`.","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/plot_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot heat map of ensemble model output — plot_heatmap","text":"","code":"plot_heatmap(   ncdf = NULL,   var = \"temp\",   dim = \"model\",   dim_index = 1,   var_list = NULL,   model = NULL,   tile_width = NULL,   tile_height = NULL )"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/plot_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot heat map of ensemble model output — plot_heatmap","text":"ncdf Path netCDF file created `run_ensemble()` var Variable plot. Defaults \"temp\" dim character; NetCDF dimensions extract. Must either \"member\" \"model\". Defaults \"model\". used plotting netCDF file. dim_index numeric; Index dimension chosen extract . Defaults 1. used plotting netCDF file. var_list list variables format loaded using `load_var()`. Defaults NULL model Vector models included plot tile_width width tiles geom_tile. Defaults NULL determine automatically tile_height height tiles geom_tile. Default NULL determine automatically","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/plot_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot heat map of ensemble model output — plot_heatmap","text":"ggplot object heatmaps","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/plot_heatmap.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot heat map of ensemble model output — plot_heatmap","text":"Tadhg Moore, Johannes Feldbauer, Jorrit Mesman","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/plot_heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot heat map of ensemble model output — plot_heatmap","text":"","code":"if (FALSE) { # \\dontrun{ ncdf <- 'output/ensemble_output.nc' # Plot heat maps plot_heatmap(ncdf = ncdf, model = model, var = \"temp\") } # }"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/plot_resid.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to plot residuals for each model of the ensemble run — plot_resid","title":"Function to plot residuals for each model of the ensemble run — plot_resid","text":"Plot residual diagnostic plots. Residuals calculated (sim - obs)  corresponding depth time step observed value.","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/plot_resid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to plot residuals for each model of the ensemble run — plot_resid","text":"","code":"plot_resid(   ncdf = NULL,   var = \"temp\",   dim = \"model\",   dim_index = 1,   var_list = NULL,   model = NULL )"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/plot_resid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to plot residuals for each model of the ensemble run — plot_resid","text":"ncdf filepath; netcdf file created `run_ensemble()` var string; variable plot. Defaults \"temp\" dim character; NetCDF dimensions extract. Must either \"member\" \"model\". Defaults \"model\". used plotting netCDF file. Currently works \"model\". dim_index numeric; Index dimension chosen extract . Defaults 1. used plotting netCDF file. var_list list; variables format loaded using `load_var()`. Defaults NULL model string vector; models included plot. NULL models netCDF/list plotted. Defaults NULL.","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/plot_resid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to plot residuals for each model of the ensemble run — plot_resid","text":"list four ggplot objects: \"obs_res\" = Observations versus residuals,  \"res_depth\" = Residuals versus depth,  \"yday_res\" = residuals day year,  \"res_dist\" = distribution residuals","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/plot_resid.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Function to plot residuals for each model of the ensemble run — plot_resid","text":"Tadhg Moore, Johannes Feldbauer","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/plot_resid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to plot residuals for each model of the ensemble run — plot_resid","text":"","code":"if (FALSE) { # \\dontrun{ plist <- plot_resid(ncdf = \"output/ensemble_output.nc\",var = \"temp\",                    model = c('FLake', 'GLM',  'GOTM', 'Simstrat', 'MyLake')) plist[['obs_res']]+ theme_classic() } # }"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/qual_fun.html","id":null,"dir":"Reference","previous_headings":"","what":"calculate model performance metrics — qual_fun","title":"calculate model performance metrics — qual_fun","text":"function calculates different estimations model accuracy, namely: root mean squared error (rmse), (Nash-Sutcliff) model efficiency (nse), Pearson corelation coefficient (r), relative error (re), mean absolute error (mae), normalized mean absolute error (nmae). returns  data.frame containing six quality estimates","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/qual_fun.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"calculate model performance metrics — qual_fun","text":"","code":"qual_fun(O, P)"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/qual_fun.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"calculate model performance metrics — qual_fun","text":"O data.frame containing observed values, first row datetime P: data.frame containing predicted values, first row datetime","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/read_flake_out.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract FLake output — read_flake_out","title":"Extract FLake output — read_flake_out","text":"Read FLake results, interpolate gridded struture return dataframe long wide format vars = \"temp\"","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/read_flake_out.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract FLake output — read_flake_out","text":"","code":"read_flake_out(   output,   vars,   depths,   folder = \".\",   nml_file,   long = FALSE,   out_time,   out_hour = 0 )"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/read_flake_out.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract FLake output — read_flake_out","text":"output filepath; FLake output file vars vector; variables extract FLake output. Currently just temp ice depths vector; numeric values extract depths . used extracting water temp folder filepath; folder contains model folders generated export_config() nml_file filepath; FLake namelist file long Boolean; return data long form out_time vector; output time values subset data . out_hour numeric; hour output time values subset data. used FLake model time step 86400s.","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/read_flake_out.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract FLake output — read_flake_out","text":"Dataframe one variable otherwise list","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/read_flake_out.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract FLake output — read_flake_out","text":"","code":"if (FALSE) { # \\dontrun{ df <- read_flake_out(output = \"FLake/output/output.dat\", folder = \"FLake\", nml_file = \"FLake/feeagh.nml\") } # }"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/run_ensemble.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Ensemble of lake models — run_ensemble","title":"Run Ensemble of lake models — run_ensemble","text":"Run lake models","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/run_ensemble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Ensemble of lake models — run_ensemble","text":"","code":"run_ensemble(   config_file,   model = c(\"GOTM\", \"GLM\", \"Simstrat\", \"FLake\", \"MyLake\"),   folder = \".\",   verbose = FALSE,   parallel = FALSE,   ncores = NULL,   return_list = FALSE,   create_output = TRUE,   add = FALSE )"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/run_ensemble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Ensemble of lake models — run_ensemble","text":"config_file filepath; LakeEnsemblr yaml master config file model vector; model export driving data. Options include c('GOTM', 'GLM', 'Simstrat', 'FLake', 'MyLake') folder filepath; folder contains model folders generated export_config() verbose Boolean; model output shown console. Defaults FALSE parallel Boolean; model calibration parallelized ncores integer; number cores use parallelization. Defaults NULL. NULL number cores used either number models selecte number cores machine, whichever smaller. return_list boolean; Return list dataframes model output. Defaults FALSE create_output boolean; Create ensemble output file otherwise just runs models generates model output respective folders. Defaults TRUE add boolean; Add results existing netcdf file new dimension \"member\"","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/run_lint.html","id":null,"dir":"Reference","previous_headings":"","what":"Runs lint for LER script — run_lint","title":"Runs lint for LER script — run_lint","text":"Runs lintr::lint function, using settings agreed upon LakeEnsemblR","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/run_lint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Runs lint for LER script — run_lint","text":"","code":"run_lint(file)"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/run_lint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Runs lint for LER script — run_lint","text":"file filepath; R script want run lintr::lint function ","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/run_lint.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Runs lint for LER script — run_lint","text":"","code":"if (FALSE) { # \\dontrun{ run_lint(file = \"export_config.R\") } # }"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/scale_met.html","id":null,"dir":"Reference","previous_headings":"","what":"Format meteorological data for each model — scale_met","title":"Format meteorological data for each model — scale_met","text":"Format dataframe shape specified model Scale meteorological parameters.","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/scale_met.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format meteorological data for each model — scale_met","text":"","code":"format_met(met, model, config_file, folder = \".\")  scale_met(met, pars, model, out_file = NULL)"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/scale_met.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format meteorological data for each model — scale_met","text":"met dataframe; format particular model column headers model character; Model scaling parameters applied. Options include c(\"GOTM\", \"GLM\", \"Simstrat\", \"FLake\", \"MyLake\") config_file filepath; LER config yaml file. used model = \"GOTM\" folder filepath; folder contains model folders generated export_config() pars dataframe; scaling factors meteorological data column names corresponding variable dictionary out_file filepath; scaled meteorlogical data","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/scale_met.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format meteorological data for each model — scale_met","text":"dataframe met data model format","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/time_average.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the average of an irregular time series — time_average","title":"Calculates the average of an irregular time series — time_average","text":"Calculates average irregular time series","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/time_average.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the average of an irregular time series — time_average","text":"","code":"time_average(timeseries, start, end, n = 1000)"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/time_average.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the average of an irregular time series — time_average","text":"timeseries dataframe; first column POSIXct, second column numeric start POSIXct; start averaging window end POSIXct; end averaging window n integer; number blocks","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/wrap_model.html","id":null,"dir":"Reference","previous_headings":"","what":"warpper function for other two methods (modMCMC and modFit) — wrap_model","title":"warpper function for other two methods (modMCMC and modFit) — wrap_model","text":"wrapper function modMCMC modFit calibration methods, used cali_ensemble cmethod == \"modMCMC\" \"modFit\".","code":""},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/wrap_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"warpper function for other two methods (modMCMC and modFit) — wrap_model","text":"","code":"wrap_model(   pars,   type,   model,   var,   config_file,   met,   folder,   out_f,   obs_deps,   obs_out,   out_hour,   qualfun,   config_f,   outf_n,   write = TRUE )"},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/reference/wrap_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"warpper function for other two methods (modMCMC and modFit) — wrap_model","text":"pars named vector set parameter wich model run performance metric returned type character vector specifying type parameter. can either `\"met\"` meteo scaling \"model\" model specific parameters, must length `pars`. model model name run function var variable calculate model performance (usually `\"temp\"`) config_file path master config file met data.frame model specific meteo data, feed scale_meteo folder root folder out_f folder root folder output LHC written obs_deps depths observations obs_out data.frame observations `var`. out_hour FLake specific: hout output qualfun function takes data.frames observations simulations returns model performance metrics outf_n name output file model performance every parameter set written write write results file? nout_fun number values returned `qualfun`.","code":""},{"path":[]},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/news/index.html","id":"changes-1-2-9","dir":"Changelog","previous_headings":"","what":"Changes","title":"version 1.2.9","text":"Added pkgdown website LakeEnsemblR Added pkgdown build GitHub Actions Updated DESCRIPTION file GitHub dependencies Updated old GitHub Actions new format","code":""},{"path":[]},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/news/index.html","id":"changes-1-2-8","dir":"Changelog","previous_headings":"","what":"Changes","title":"version 1.2.8","text":"bug fix export_model_parameters function using folder argument \".\" bug fix cali_ensemble unit observations seconds","code":""},{"path":[]},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/news/index.html","id":"changes-1-2-7","dir":"Changelog","previous_headings":"","what":"Changes","title":"version 1.2.7","text":"bug fix plot_LHC function; can used also calibrating Kw","code":""},{"path":[]},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/news/index.html","id":"changes-1-2-6","dir":"Changelog","previous_headings":"","what":"Changes","title":"version 1.2.6","text":"addition bug fix v1.2.1 (related change dplyr package), now also applied density salinity output requested bug fix: issue occur output variables requested different order used get_output function, solved water level changes now handled correctly GOTM salinity density (previously temperature) Rewrote LHC calibration parallel mode can parallelize model rather model thus speeds LHC parallel. added cmethod = \"LHC\" original LHC mode preserved cmethod = \"LHC_old\". Corresponding update MyLakeR resets working directory running model. fixed bug check_congig() throw error Kw section present calibration part config yaml file","code":""},{"path":[]},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/news/index.html","id":"changes-1-2-5","dir":"Changelog","previous_headings":"","what":"Changes","title":"version 1.2.5","text":"fixed bug multiple outflows get export_flow() crash fixed another small bug recent changes Kw","code":""},{"path":[]},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/news/index.html","id":"changes-1-2-4","dir":"Changelog","previous_headings":"","what":"Changes","title":"version 1.2.4","text":"fixed mistake time series Kw values given New version plot_heatmap function, old version show unintended shifts white lines certain data compositions","code":""},{"path":[]},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/news/index.html","id":"changes-1-2-3","dir":"Changelog","previous_headings":"","what":"Changes","title":"version 1.2.3","text":"fixed small mistake model specific Kw values","code":""},{"path":[]},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/news/index.html","id":"changes-1-2-2","dir":"Changelog","previous_headings":"","what":"Changes","title":"version 1.2.2","text":"added possibility set model specific Kw values time series config file. want use value models just modify value single model need supply value . Old config files single value still work.","code":""},{"path":[]},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/news/index.html","id":"changes-1-2-1","dir":"Changelog","previous_headings":"","what":"Changes","title":"version 1.2.1","text":"added possibility calibrate Kw value models. LakeEnsemblR config file needs new entry Kw calibration section file (see changed LakeEnsemblR.yaml template file) fixed issue get_output() MyLake dplyr v. 1.1 crash occure","code":""},{"path":[]},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/news/index.html","id":"changes-1-1-9","dir":"Changelog","previous_headings":"","what":"Changes","title":"version 1.1.9","text":"fixed bug LHC calibration model crash first run headding ouput file wrong Add number rows hypsograph file calculated max_layers parameter GLM, avoid failure Lagrangian algorithm","code":""},{"path":[]},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/news/index.html","id":"changes-1-1-8","dir":"Changelog","previous_headings":"","what":"Changes","title":"version 1.1.8","text":"convert temperature observations long-format, dcast function within run_ensemble cali_ensemble now uses mean(..., na.rm = TRUE) aggregation function. Previously, cause problems case non-unique observations (warning thrown exist). added check mean depth 1.5 meters cause export_init_cond function crash FLake calc_hmix default value 1.5 m minimum depth","code":""},{"path":[]},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/news/index.html","id":"changes-1-1-7","dir":"Changelog","previous_headings":"","what":"Changes","title":"version 1.1.7","text":"Bug fixes: - Warning message shows pre-v1.1 mass-balance argument used, pointing towards solution outflows section missing.","code":""},{"path":[]},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/news/index.html","id":"changes-1-1-6","dir":"Changelog","previous_headings":"","what":"Changes","title":"version 1.1.6","text":"Bug fixes: - Fixed error analyse_ncdf ice present ncdf file enough observational data.","code":""},{"path":[]},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/news/index.html","id":"changes-1-1-5","dir":"Changelog","previous_headings":"","what":"Changes","title":"version 1.1.5","text":"Bug fixes: - Fixed error export_flow using start stop date included inflow outflow file - Fixed bug get_output show wrong NA values Simstrat temperature output due water level change including depths observation files included Simstrat output.","code":""},{"path":[]},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/news/index.html","id":"changes-1-1-4","dir":"Changelog","previous_headings":"","what":"Changes","title":"version 1.1.4","text":"Bug fixes: - Fixed error export_extinction caused GOTM crash formating datetime column","code":""},{"path":[]},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/news/index.html","id":"changes-1-1-3","dir":"Changelog","previous_headings":"","what":"Changes","title":"version 1.1.3","text":"Bug fixes: - Calculation degrees East longitude output netcdf file corrected, values 180-360 locations Western Hemisphere","code":""},{"path":[]},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/news/index.html","id":"changes-1-1-2","dir":"Changelog","previous_headings":"","what":"Changes","title":"version 1.1.2","text":"now possible add sensible latent heat fluxes output netcdf file adding q_sens /q_lat list wanted output variables yaml config file","code":""},{"path":[]},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/news/index.html","id":"changes-1-1-1","dir":"Changelog","previous_headings":"","what":"Changes","title":"version 1.1.1","text":"Bug fixes: - fixed error formatting Simstrat flow flow 0 lead NA Simstrat inflow forcing files","code":""},{"path":[]},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/news/index.html","id":"changes-1-1-0","dir":"Changelog","previous_headings":"","what":"Changes","title":"version 1.1.0","text":"Inflows outflows now separate inputs can different Multiple inflows outflows can simulated. Outflows can exit lake specified depths, surface. Water level (“w_level”) now potential output LakeEnsemblR. “max_members” can specified, sets number members output-netcdf can LakeEnsemblR now works latest version Simstrat (v3.0.1), included changes parameter names Model-specific template config files removed LakeEnsemblR package instead retrieved model-specific packages Bug fixes: - get_yaml_multiple input_yaml_multiple; works now first key highest level yaml file - cali_ensemble FLake; depths now sorted - Initial conditions Simstrat; Simstrat now always starts specified initial water lvl - plot_heatmap now works lakes water level changes setup LakeEnsemblR configuration file changed. information can found : https://github.com/aemon-j/LakeEnsemblR/wiki/-v1.0--v1.1","code":""},{"path":[]},{"path":"https://tadhg-moore.github.io/LakeEnsemblR/news/index.html","id":"changes-1-0-5","dir":"Changelog","previous_headings":"","what":"Changes","title":"version 1.0.5","text":"added NEWS.md file Changed default branch name “main”. contribute LakeEnsemblR local clone repository please update local branch name using:","code":"git branch -m master main git fetch origin git branch -u origin/main main git remote set-head origin -a"}]
